{"version":3,"file":"edit-event.js","sources":["../../../foundation/edit-event.ts"],"sourcesContent":["/** Intent to `parent.insertBefore(node, reference)` */\nexport type Insert = {\n  parent: Node;\n  node: Node;\n  reference: Node | null;\n};\n\nexport type NamespacedAttributeValue = {\n  value: string | null;\n  namespaceURI: string | null;\n};\nexport type AttributeValue = string | null | NamespacedAttributeValue;\n/** Intent to set or remove (if null) attributes on element */\nexport type Update = {\n  element: Element;\n  attributes: Partial<Record<string, AttributeValue>>;\n};\n\n/** Intent to remove a node from its ownerDocument */\nexport type Remove = {\n  node: Node;\n};\n\n/** Represents the user's intent to change an XMLDocument */\nexport type Edit = Insert | Update | Remove | Edit[];\n\nexport function isComplex(edit: Edit): edit is Edit[] {\n  return edit instanceof Array;\n}\n\nexport function isInsert(edit: Edit): edit is Insert {\n  return (edit as Insert).parent !== undefined;\n}\n\nexport function isNamespaced(\n  value: AttributeValue\n): value is NamespacedAttributeValue {\n  return value !== null && typeof value !== 'string';\n}\n\nexport function isUpdate(edit: Edit): edit is Update {\n  return (edit as Update).element !== undefined;\n}\n\nexport function isRemove(edit: Edit): edit is Remove {\n  return (\n    (edit as Insert).parent === undefined && (edit as Remove).node !== undefined\n  );\n}\n\nexport type EditEvent<E extends Edit = Edit> = CustomEvent<E>;\n\nexport function newEditEvent<E extends Edit>(edit: E): EditEvent<E> {\n  return new CustomEvent<E>('oscd-edit', {\n    composed: true,\n    bubbles: true,\n    detail: edit,\n  });\n}\n\ndeclare global {\n  interface ElementEventMap {\n    ['oscd-edit']: EditEvent;\n  }\n}\n\n/** EDIT HANDLING */\n\nfunction localAttributeName(attribute: string): string {\n  return attribute.includes(':') ? attribute.split(':', 2)[1] : attribute;\n}\n\nfunction handleInsert({\n  parent,\n  node,\n  reference,\n}: Insert): Insert | Remove | [] {\n  try {\n    const { parentNode, nextSibling } = node;\n    parent.insertBefore(node, reference);\n    if (parentNode)\n      return {\n        node,\n        parent: parentNode,\n        reference: nextSibling,\n      };\n    return { node };\n  } catch (e) {\n    // do nothing if insert doesn't work on these nodes\n    return [];\n  }\n}\n\nfunction handleUpdate({ element, attributes }: Update): Update {\n  const oldAttributes = { ...attributes };\n  Object.entries(attributes)\n    .reverse()\n    .forEach(([name, value]) => {\n      let oldAttribute: AttributeValue;\n      if (isNamespaced(value!))\n        oldAttribute = {\n          value: element.getAttributeNS(\n            value.namespaceURI,\n            localAttributeName(name)\n          ),\n          namespaceURI: value.namespaceURI,\n        };\n      else\n        oldAttribute = element.getAttributeNode(name)?.namespaceURI\n          ? {\n              value: element.getAttribute(name),\n              namespaceURI: element.getAttributeNode(name)!.namespaceURI!,\n            }\n          : element.getAttribute(name);\n      oldAttributes[name] = oldAttribute;\n    });\n  for (const entry of Object.entries(attributes)) {\n    try {\n      const [attribute, value] = entry as [string, AttributeValue];\n      if (isNamespaced(value)) {\n        if (value.value === null)\n          element.removeAttributeNS(\n            value.namespaceURI,\n            localAttributeName(attribute)\n          );\n        else element.setAttributeNS(value.namespaceURI, attribute, value.value);\n      } else if (value === null) element.removeAttribute(attribute);\n      else element.setAttribute(attribute, value);\n    } catch (e) {\n      // do nothing if update doesn't work on this attribute\n      delete oldAttributes[entry[0]];\n    }\n  }\n  return {\n    element,\n    attributes: oldAttributes,\n  };\n}\n\nfunction handleRemove({ node }: Remove): Insert | [] {\n  const { parentNode: parent, nextSibling: reference } = node;\n  node.parentNode?.removeChild(node);\n  if (parent)\n    return {\n      node,\n      parent,\n      reference,\n    };\n  return [];\n}\n\nexport function handleEdit(edit: Edit): Edit {\n  if (isInsert(edit)) return handleInsert(edit);\n  if (isUpdate(edit)) return handleUpdate(edit);\n  if (isRemove(edit)) return handleRemove(edit);\n  if (isComplex(edit)) return edit.map(handleEdit).reverse();\n  return [];\n}\n"],"names":[],"mappings":"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"}